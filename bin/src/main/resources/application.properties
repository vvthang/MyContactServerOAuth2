# ===============================
# Security
# ===============================
#server.port=8000
#server.context-path=/auth
#security.basic.enabled=false

# ===============================
# THYMELEAF
# ===============================
spring.thymeleaf.cache=false

spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp

# ===============================
# DATASOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "mycontact"
spring.datasource.url=jdbc:postgresql://localhost:5432/MyContact

# MySQL username and password 
spring.datasource.username=postgres
spring.datasource.password=postgres

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging
#logging.level.root= ERROR
#logging.level.org.springframework.security= DEBUG
#logging.level.org.springframework.web= DEBUG
#logging.level.org.hibernate= ERROR
logging.level.com.vvthang=DEBUG
#logging.level.org.apache.commons.dbcp2= DEBUG

# Logging File
#logging.file=myapplication.log
